---
- name: Update apt package manager cache
  ansible.builtin.apt:
    update_cache: true
  become: true
  tags:
    - apt

- name: Install apt packages # noqa:package-latest
  ansible.builtin.apt:
    name: "{{ thibaut_apt_packages }}"
    state: latest
  become: true
  tags:
    - apt

- name: Download .deb packages from url
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: /tmp/{{ item.file_name }}
    timeout: 30
  loop: "{{ thibaut_deb_packages }}"
  tags:
    - apt

- name: Install downloaded .deb packages
  ansible.builtin.apt:
    deb: /tmp/{{ item.file_name }}
  loop: "{{ thibaut_deb_packages }}"
  become: true
  tags:
    - apt

- name: Install slack latest .deb package
  ansible.builtin.import_tasks: slack.yml
  tags: 
    - slack

- name: Install awscli v2
  ansible.builtin.import_tasks: awscli_v2.yml
  tags: 
    - awscli

- name: Remove useless packages from the cache
  ansible.builtin.apt:
    autoclean: true
  become: true
  tags:
    - apt
    - cleanup

- name: Remove dependencies that are no longer required
  ansible.builtin.apt:
    autoremove: true
  become: true
  tags: 
    - apt
    - cleanup

- name: Install linuxbrew
  ansible.builtin.include_role:
    name: markosamuli.linuxbrew
  vars:
    linuxbrew_use_installer: true
  tags:
    - brew

- name: Install brew packages
  community.general.homebrew:
    name: "{{ thibaut_brew_packages }}"
    state: latest
    update_homebrew: true
    upgrade_all: true
  tags:
    - brew

- name: Check if dprint is installed
  ansible.builtin.command: dprint --version
  register: dprint_installed
  ignore_errors: true

- name: Upgrade dprint if installed
  ansible.builtin.command: dprint upgrade
  when: dprint_installed.rc == 0

- name: Install dprint if not installed
  ansible.builtin.shell: curl -fsSL https://dprint.dev/install.sh | sh
  when: dprint_installed.rc != 0

- name: Uv install latest Pythons
  ansible.builtin.command: >
    uv python install
    3.8
    3.9
    3.10
    3.11
    3.12
    3.13
  tags:
    - uv

- name: Uv install tools
  ansible.builtin.command: >
    uv tool install
    --python 3.12
    {{ item.name }}
    {% if item.with is defined %}
    {% for w in item.with %}--with {{ w }}{% endfor %}
    {% endif %}
  loop: "{{ thibaut_uv_tools }}"
  tags:
    - uv

- name: Uv upgrade tools
  ansible.builtin.command: >
    uv tool upgrade
    {{ item.name }}
    {% if item.with is defined %}
    {% for w in item.with %}--upgrade-package {{ w }}{% endfor %}
    {% endif %}
  loop: "{{ thibaut_uv_tools }}"
  tags:
    - uv

- name: Uv prune cache
  ansible.builtin.command: uv cache prune
  tags:
    - uv
    - cleanup
