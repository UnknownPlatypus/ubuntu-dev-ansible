---
- name: Setup, install and cleanup apt packages
  ansible.builtin.import_tasks: apt_installs.yml
  tags:
    - apt

- name: Install linuxbrew
  ansible.builtin.include_role:
    name: markosamuli.linuxbrew
    apply:
      tags:
        - brew
  vars:
    linuxbrew_use_installer: true
  tags:
    - brew

- name: Install & upgrade brew packages
  community.general.homebrew:
    name: "{{ thibaut_brew_packages }}"
    state: latest
    update_homebrew: true
  tags:
    - brew

- name: Install awscli v2
  ansible.builtin.import_tasks: packages/awscli_v2.yml
  tags:
    - aws-cli

- name: Install dprint
  ansible.builtin.import_tasks: packages/dprint.yml
  tags:
    - dprint

- name: Install atuin
  ansible.builtin.import_tasks: packages/atuin.yml
  tags:
    - atuin

- name: Install JetBrains Toolbox
  ansible.builtin.import_tasks: packages/jetbrains-toolbox.yml
  tags:
    - jetbrains

- name: Install Podman Desktop Toolbox
  ansible.builtin.import_tasks: packages/podman-desktop.yml
  tags:
    - podman

- name: Install rust toolchain
  ansible.builtin.include_role:
    name: hurricanehrndz.rustup
    apply:
      tags:
        - rust
  vars:
    rustup_cargo_crates: []
  tags:
    - rust

- name: Install Rust stable and nightly with rustup
  ansible.builtin.command: rustup install stable nightly
  register: rustup_install_output
  changed_when: "'unchanged' not in rustup_install_output.stdout"

- name: Upgrade UV
  ansible.builtin.command: uv self update
  register: uv_update
  changed_when: "'latest version of uv' not in uv_update.stderr"
  tags:
    - uv

- name: Uv install latest Pythons
  ansible.builtin.command: >
    uv python install
    3.8
    3.9
    3.10
    3.11
    3.12
    3.13
  register: uv_python_install
  changed_when: "'All requested versions already installed' not in uv_python_install.stderr"
  tags:
    - uv

- name: Uv install tools
  ansible.builtin.command: >
    uv tool install
    --python 3.12
    {{ item.name }}
    {% if item.with is defined %}
    {% for w in item.with %}--with {{ w }}{% endfor %}
    {% endif %}
  loop: "{{ thibaut_uv_tools }}"
  register: uv_tool_install
  changed_when: "'already installed' not in uv_tool_install.stderr"
  tags:
    - uv

- name: Uv upgrade tools
  ansible.builtin.command: >
    uv tool upgrade
    {{ item.name }}
    {% if item.with is defined %}
    {% for w in item.with %}--upgrade-package {{ w }}{% endfor %}
    {% endif %}
  loop: "{{ thibaut_uv_tools }}"
  register: uv_upgrade
  changed_when: "'Nothing to upgrade' not in uv_upgrade.stderr"
  tags:
    - uv

- name: Uv prune cache
  ansible.builtin.command: uv cache prune
  register: uv_prune
  changed_when: "'Removed' in uv_prune.stderr"
  tags:
    - uv
    - cleanup

- name: Install latest node with n
  ansible.builtin.command: n latest
  environment:
    N_PREFIX: "{{ ansible_env.HOME }}/.n"
  register: n_install
  changed_when: "'installing' in n_install.stdout"
  tags:
    - node
